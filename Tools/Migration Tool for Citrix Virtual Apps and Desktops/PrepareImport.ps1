<#
.SYNOPSIS
This is the start up script for PrepareImport.ps1

.DESCRIPTION
This is the start up script for PrepareImport.ps1

.PARAMETER XmlPathApplications
Path to applications XML export from Citrix Virtual Apps and Desktops

.EXAMPLE
./PrepareImport.ps1

./PrepareImport.ps1 -applicationXmlPath "applications.xml"
.NOTES
The Citrix Virtual Apps and Desktops XML settings files that are required for this script are to be generated by the administrator.
#>
Param(
	# [Parameter(Mandatory = $false)]
	# [string] $XmlPathWorkgroups,
	# [Parameter(Mandatory = $false)]
	# [string] $XmlPathZones,
	# [Parameter(Mandatory = $false)]
	# [string] $XmlPathServers,
	[Parameter(Mandatory = $false)]
	[string] $XmlPathApplications
	# [Parameter(Mandatory = $false)]
	# [string] $XmlPathFarm = $null
)

# $XmlPathWorkgroups = "./XmlMock/workergroups.xml"
# $XmlPathZones = "./XmlMock/zones.xml"
# $XmlPathServers = "./XmlMock/servers.xml"
# $XmlPathApplications = "./XmlMock/applications.xml"
# $XmlPathFarm = "./XmlMock/farm.xml"

[System.IO.Directory]::SetCurrentDirectory($PSScriptRoot)
. "./RASMigrationEngine.ps1"

function Main {
	$path = Get-Location
	$settings = SetSettings @{
		ScriptPath = "./ImportToRas.ps1"
		IconPath   = "$path\icons"
	}

	# try {
	Log -type "INFO" -message "Parsing XML into memory database ..."
	[System.Data.DataSet]$db = ParseXMLtoDB -zonesXmlPath $XmlPathZones -serversXmlPath $XmlPathServers -workgroupXmlPath $XmlPathWorkgroups -applicationXmlPath $XmlPathApplications -farmXmlPath $XmlPathFarm
	# }
	# catch [Exception] {
	# Log -type "ERROR" -message "Failed to run RAS Migration engine." -exception $_.Exception
	# return
	# }
	Log -type "INFO" -message "In-memory database ready!"

	Log -type "INFO" -message "Generating migration script ..."
	InitializeScript -appendToMain {
		MigrateSites($db)
		MigrateServers($db)
		MigrateGroups($db)
		MigrateFolders($db)
		MigrateApplications($db)
		WriteToScript "Remove-RASSession"
	}

	Log -type "INFO" -message "Migration script generated! :)"
	Log -type "INFO" -message "Migration script is saved in $($settings.ScriptPath)" -tabSize 1
	Log -type "INFO" -message "Icon '.ico' files are saved in $($settings.IconPath)" -tabSize 1
}

Main
